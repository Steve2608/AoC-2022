import unittest

_22 = __import__('22')


class AoCTest(unittest.TestCase):

    data = _22.get_data(r'''        ...#
        .#..
        #...
        ....
...#.......#
........#...
..#....#....
..........#.
        ...#....
        .....#..
        .#......
        ......#.

10R5L5R10L4R5L5''')

    # cube layout is
    # ..1.
    # 234.
    # ..56
    _22.faces = dict(enumerate([(0, 2), (1, 0), (1, 1), (1, 2), (2, 2), (2, 3)], 1))
    # from (face, facing) -> (face, facing)
    _22.connections = {
        (1, 0): (6, 2), (1, 1): (4, 1), (1, 2): (3, 1), (1, 3): (2, 1),
        (2, 0): (3, 0), (2, 1): (5, 3), (2, 2): (6, 3), (2, 3): (1, 1),
        (3, 0): (4, 0), (3, 1): (5, 0), (3, 2): (2, 2), (3, 3): (1, 0),
        (4, 0): (6, 1), (4, 1): (5, 1), (4, 2): (3, 2), (4, 3): (1, 3),
        (5, 0): (6, 0), (5, 1): (2, 3), (5, 2): (3, 3), (5, 3): (4, 3),
        (6, 0): (1, 2), (6, 1): (2, 0), (6, 2): (5, 2), (6, 3): (4, 2)
    }
    _22.LEN = 4

    def test_part1(self):
        self.assertEqual(6032, _22.part1(self.data))

    def test_part2(self):
        self.assertEqual(5031, _22.part2(self.data))


if __name__ == '__main__':
    unittest.main()
